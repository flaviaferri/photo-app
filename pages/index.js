import { useState, useEffect } from "react";
import { useRouter } from "next/router";
import Head from "next/head";
import Input from "../components/Input";
import Photos from "../components/Photos";
import Title from "../components/Title";
import Main from "../components/Main";
import { createApi, toJson } from "unsplash-js";

export default function Home() {
  const router = useRouter();
  const [search, setSearch] = useState(router.query.search || "");
  const [pictures, setPictures] = useState([]);
  const [page, setPage] = useState(1);

  const unsplash = createApi({
    accessKey: "cDNJxPq6O_eVRv4YQII_WcC5cJww3chv5pHoGTvsTYY",
  });

  // Search from input
  useEffect(() => {
    const searchPhotos = async () => {
      if (search)
        router.push(`/?search=${search}`, undefined, { shallow: true });

      unsplash.search
        .getPhotos({ query: search, page, perPage: 16 })
        .then(toJson)
        .then((json) => {
          setPictures(json.response.results);
        });
    };

    searchPhotos();
  }, [search]);

  //Search from URL
  useEffect(() => {
    const getDailyPhotos = async () => {
      unsplash.photos
        .getRandom({
          count: 16,
        })
        .then(toJson)
        .then((json) => {
          setPictures((pictures) => [...pictures, ...json.response]);
        });
    };

    getDailyPhotos();
  }, []);

  // Load more
  useEffect(() => {
    const searchPhotos = async () => {
      unsplash.search
        .getPhotos({ query: search, page })
        .then(toJson)
        .then((json) => {
          setPictures((pictures) => [...pictures, ...json.response.results]);
        });
    };

    searchPhotos();
  }, [page]);

  const handleLoadMore = () => {
    setPage(page + 1);
  };

  return (
    <div>
      <Head>
        <title>Photo App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Main>
        <Input handleSubmit={setSearch} />
        <Title>{search || "Daily"} Pictures</Title>
        <Photos pictures={pictures} handleLoadMore={handleLoadMore} />
      </Main>

      <footer></footer>
    </div>
  );
}
